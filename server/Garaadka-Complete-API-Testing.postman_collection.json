{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Garaadka Laundry Management - Complete API Testing",
		"description": "Comprehensive API testing collection for Garaadka Laundry Management System with real database data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('username', response.user.username);",
									"    console.log('Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"personal_id\": \"EMP001\",\n    \"fname\": \"John Doe\",\n    \"username\": \"johndoe\",\n    \"password\": \"password123\",\n    \"city\": \"Addis Ababa\",\n    \"phoneno\": \"+251911123456\",\n    \"position\": \"Manager\",\n    \"sec_que\": \"What is your favorite color?\",\n    \"answer\": \"Blue\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"admin123\",\n    \"new_password\": \"newpassword123\",\n    \"confirm_password\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/change-password/ADMIN001",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"change-password",
								"ADMIN001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customers Management",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('customer_id', response.customer_id);",
									"    console.log('Customer ID saved:', response.customer_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Ahmed Hassan\",\n    \"phone_number\": \"+251911234567\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('customer_id_2', response.customer_id);",
									"    console.log('Customer ID 2 saved:', response.customer_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Fatima Mohammed\",\n    \"phone_number\": \"+251922345678\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customers Paginated",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/paginated?page=1&limit=10&status=active",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"paginated"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/{{customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Customer by Phone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/search/phone/+251911234567",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"search",
								"phone",
								"+251911234567"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Customer by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/search/Ahmed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"search",
								"Ahmed"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Ahmed Hassan Updated\",\n    \"phone_number\": \"+251911234567\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers/{{customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders Management",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('order_id', response.order_id);",
									"    pm.environment.set('order_number', response.order_number);",
									"    console.log('Order ID saved:', response.order_id);",
									"    console.log('Order Number saved:', response.order_number);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": {{customer_id}},\n    \"due_date\": \"2024-01-20T10:00:00Z\",\n    \"delivery_date\": \"2024-01-22T15:00:00Z\",\n    \"payment_method\": \"cash\",\n    \"notes\": \"Handle with care - delicate fabrics\",\n    \"items\": [\n        {\n            \"item_name\": \"Shirt Dry Cleaning\",\n            \"description\": \"White cotton shirt\",\n            \"quantity\": 3,\n            \"unit_price\": 25.00,\n            \"color\": \"White\",\n            \"size\": \"Large\",\n            \"special_instructions\": \"No starch\"\n        },\n        {\n            \"item_name\": \"Pants Pressing\",\n            \"description\": \"Black formal pants\",\n            \"quantity\": 2,\n            \"unit_price\": 15.00,\n            \"color\": \"Black\",\n            \"size\": \"Medium\",\n            \"special_instructions\": \"Light pressing only\"\n        },\n        {\n            \"item_name\": \"Dress Cleaning\",\n            \"description\": \"Evening dress\",\n            \"quantity\": 1,\n            \"unit_price\": 45.00,\n            \"color\": \"Blue\",\n            \"size\": \"Small\",\n            \"special_instructions\": \"Dry clean only\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('order_id_2', response.order_id);",
									"    pm.environment.set('order_number_2', response.order_number);",
									"    console.log('Order ID 2 saved:', response.order_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": {{customer_id_2}},\n    \"due_date\": \"2024-01-25T14:00:00Z\",\n    \"delivery_date\": \"2024-01-27T16:00:00Z\",\n    \"payment_method\": \"card\",\n    \"notes\": \"Regular cleaning service\",\n    \"items\": [\n        {\n            \"item_name\": \"Bedsheet Washing\",\n            \"description\": \"King size bedsheet set\",\n            \"quantity\": 1,\n            \"unit_price\": 35.00,\n            \"color\": \"White\",\n            \"size\": \"King\",\n            \"special_instructions\": \"Hot water wash\"\n        },\n        {\n            \"item_name\": \"Towel Cleaning\",\n            \"description\": \"Bath towels\",\n            \"quantity\": 4,\n            \"unit_price\": 8.00,\n            \"color\": \"Mixed\",\n            \"size\": \"Standard\",\n            \"special_instructions\": \"Fabric softener\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders by Customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/customer/{{customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"customer",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"processing\",\n    \"notes\": \"Order is now being processed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"due_date\": \"2024-01-21T10:00:00Z\",\n    \"delivery_date\": \"2024-01-23T15:00:00Z\",\n    \"payment_method\": \"card\",\n    \"notes\": \"Updated delivery date - customer request\",\n    \"status\": \"processing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/stats/dashboard?date_from=2024-01-01&date_to=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"stats",
								"dashboard"
							],
							"query": [
								{
									"key": "date_from",
									"value": "2024-01-01"
								},
								{
									"key": "date_to",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payments Management",
			"item": [
				{
					"name": "Create Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('payment_id', response.payment_id);",
									"    console.log('Payment ID saved:', response.payment_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": {{order_id}},\n    \"customer_id\": {{customer_id}},\n    \"amount\": 75.00,\n    \"payment_method\": \"cash\",\n    \"reference_number\": \"PAY001\",\n    \"notes\": \"Partial payment for order\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('payment_id_2', response.payment_id);",
									"    console.log('Payment ID 2 saved:', response.payment_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": {{order_id_2}},\n    \"customer_id\": {{customer_id_2}},\n    \"amount\": 67.00,\n    \"payment_method\": \"card\",\n    \"reference_number\": \"PAY002\",\n    \"notes\": \"Full payment for bedsheet and towel cleaning\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Payments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payments by Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/order/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"order",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 80.00,\n    \"payment_method\": \"card\",\n    \"reference_number\": \"PAY001-UPDATED\",\n    \"notes\": \"Updated payment amount\",\n    \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/stats/dashboard?date_from=2024-01-01&date_to=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"stats",
								"dashboard"
							],
							"query": [
								{
									"key": "date_from",
									"value": "2024-01-01"
								},
								{
									"key": "date_to",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Refund",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refund_amount\": 25.00,\n    \"refund_reason\": \"Customer complaint - stain not removed\",\n    \"refund_method\": \"cash\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}/refund",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Receipt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/{{payment_id}}/receipt",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"{{payment_id}}",
								"receipt"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Receipts Management",
			"item": [
				{
					"name": "Get Receipt by Order ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/receipts/order/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"receipts",
								"order",
								"{{order_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Audit Management",
			"item": [
				{
					"name": "Get Audit Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/audit?limit=20&offset=0&sort_by=audit_id&sort_order=DESC",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sort_by",
									"value": "audit_id"
								},
								{
									"key": "sort_order",
									"value": "DESC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Audit Logs by Table",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/audit?table_name=customers&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit"
							],
							"query": [
								{
									"key": "table_name",
									"value": "customers"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Audit Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/audit/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Audit by User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/audit/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Audit Timeline Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/audit/analytics/timeline?start_date=2024-01-01&end_date=2024-12-31&granularity=day",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								"analytics",
								"timeline"
							],
							"query": [
								{
									"key": "start_date",
									"value": "2024-01-01"
								},
								{
									"key": "end_date",
									"value": "2024-12-31"
								},
								{
									"key": "granularity",
									"value": "day"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Manual Audit Log",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"table_name\": \"manual_entry\",\n    \"record_id\": \"TEST001\",\n    \"action_type\": \"CREATE\",\n    \"status\": \"Manual audit log entry for testing\",\n    \"new_values\": {\n        \"test_field\": \"test_value\",\n        \"timestamp\": \"2024-01-15T10:30:00Z\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/audit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register Legacy",
			"item": [
				{
					"name": "Create Register Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('register_id', response.id);",
									"    console.log('Register ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Meron Tadesse\",\n    \"phone_number\": \"+251933456789\",\n    \"description\": \"Suit dry cleaning and pressing\",\n    \"quantity\": 2,\n    \"unit_price\": 55.00,\n    \"due_date\": \"2024-01-25\",\n    \"delivery_date\": \"2024-01-27\",\n    \"color\": \"Navy Blue\",\n    \"size\": \"Large\",\n    \"payment_status\": \"unpaid\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register-legacy",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Register Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register-legacy?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Register by Phone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register-legacy/search/+251933456789",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"search",
								"+251933456789"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Register Entry by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register-legacy/{{register_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"{{register_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_status\": \"paid\",\n    \"payment_method\": \"cash\",\n    \"payment_date\": \"2024-01-15T14:30:00Z\",\n    \"notes\": \"Payment received in full\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register-legacy/{{register_id}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"{{register_id}}",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Register Entry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Meron Tadesse Updated\",\n    \"description\": \"Suit dry cleaning, pressing and minor alterations\",\n    \"quantity\": 2,\n    \"unit_price\": 60.00,\n    \"due_date\": \"2024-01-26\",\n    \"delivery_date\": \"2024-01-28\",\n    \"color\": \"Navy Blue\",\n    \"size\": \"Large\",\n    \"payment_status\": \"paid\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register-legacy/{{register_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"{{register_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Register Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register-legacy/stats/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"stats",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Date Range Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register-legacy/reports/date-range?start_date=2024-01-01&end_date=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register-legacy",
								"reports",
								"date-range"
							],
							"query": [
								{
									"key": "start_date",
									"value": "2024-01-01"
								},
								{
									"key": "end_date",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register Management",
			"item": [
				{
					"name": "Create Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('register_user_id', response.id);",
									"    console.log('Register User ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sarah Johnson\",\n    \"username\": \"sarahj\",\n    \"password\": \"password123\",\n    \"email\": \"sarah.johnson@example.com\",\n    \"phone\": \"+251944567890\",\n    \"role\": \"user\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Register Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Register User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register/{{register_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register",
								"{{register_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Register User by Phone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register/search/+251944567890",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register",
								"search",
								"+251944567890"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Register User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sarah Johnson Updated\",\n    \"email\": \"sarah.johnson.updated@example.com\",\n    \"phone\": \"+251944567890\",\n    \"role\": \"manager\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register/{{register_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register",
								"{{register_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Register User Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"inactive\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register/{{register_user_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register",
								"{{register_user_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Register Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/register/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Invalid Customer ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Order ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Payment ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/payments/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"payments",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Unauthorized Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Create Customer with Duplicate Phone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_name\": \"Duplicate Phone Test\",\n    \"phone_number\": \"+251911234567\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Create Order with Invalid Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 99999,\n    \"due_date\": \"2024-01-20T10:00:00Z\",\n    \"items\": [\n        {\n            \"item_name\": \"Test Item\",\n            \"quantity\": 1,\n            \"unit_price\": 10.00\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}